name: Build, Dockerize, and Push to DO

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: syntaxflavor-backend
  IMAGE_TAG: latest

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Build Docker image
      - name: Build Docker image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .

      # Step 3: Tag Docker image
      - name: Tag Docker image
        run: |
          ECR_URI=${{ secrets.ECR_URI }}
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_URI:$IMAGE_TAG

      # Step 4 Push to DockerHub
      - name: Push to DockerHub
        run: |
          docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_TOKEN }}"
          docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ secrets.DOCKERHUB_USERNAME }}/$ECR_REPOSITORY:$IMAGE_TAG
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/$ECR_REPOSITORY:$IMAGE_TAG

      # Step 5: Set up SSH agent and deploy
      - name: Set up SSH agent and deploy
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.DO_DROPLET_KEY }}

      # Step 6: Install SSH key
      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.DO_DROPLET_IP}} >> ~/.ssh/known_hosts
  
      # Step 7: Deploy via SSH
      - name: Deploy via SSH
        env:
          HOST: root@${{ secrets.DO_DROPLET_IP}}
        run: |
            ssh $HOST 'docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" -p "${{ secrets.DOCKERHUB_TOKEN }}" &&cd ~/SyntaxFlavor_Backend/digital_ocean && docker compose pull syntaxflavor_backend && docker compose stop syntaxflavor_backend && docker compose rm -f syntaxflavor_backend && docker compose up -d --force-recreate syntaxflavor_backend'

    # Permisos de AWS para GitHub
    permissions:
      contents: read
      id-token: write